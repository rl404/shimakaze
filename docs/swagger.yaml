basePath: /
definitions:
  entity.ChannelType:
    enum:
    - YOUTUBE
    - TWITCH
    - BILIBILI
    - NICONICO
    - OTHER
    type: string
    x-enum-varnames:
    - ChannelYoutube
    - ChannelTwitch
    - ChannelBilibili
    - ChannelNiconico
    - ChannelOther
  service.AuthCallback:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  service.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  service.User:
    properties:
      id:
        type: integer
      username:
        type: string
    type: object
  service.VtuberOverriddenField:
    properties:
      affiliations:
        $ref: '#/definitions/service.overriddenAffiliations'
      agencies:
        $ref: '#/definitions/service.overriddenAgencies'
      channels:
        $ref: '#/definitions/service.overriddenChannels'
      debut_date:
        $ref: '#/definitions/service.overriddenDate'
      retirement_date:
        $ref: '#/definitions/service.overriddenDate'
    type: object
  service.agency:
    properties:
      id:
        type: integer
      image:
        type: string
      member:
        type: integer
      name:
        type: string
      subscriber:
        type: integer
      updated_at:
        type: string
    type: object
  service.familyTreeRole:
    enum:
    - DESIGNER
    - 2D_MODELER
    - 3D_MODELER
    type: string
    x-enum-varnames:
    - familyTreeDesigner
    - familyTree2DModeler
    - familyTree3DModeler
  service.language:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  service.overriddenAffiliations:
    properties:
      flag:
        type: boolean
      value:
        items:
          type: string
        type: array
    required:
    - value
    type: object
  service.overriddenAgencies:
    properties:
      flag:
        type: boolean
      value:
        items:
          $ref: '#/definitions/service.vtuberAgency'
        type: array
    type: object
  service.overriddenChannels:
    properties:
      flag:
        type: boolean
      value:
        items:
          $ref: '#/definitions/service.vtuberChannel'
        type: array
    type: object
  service.overriddenDate:
    properties:
      flag:
        type: boolean
      value:
        type: string
    type: object
  service.video:
    properties:
      channel_id:
        type: string
      channel_name:
        type: string
      channel_type:
        $ref: '#/definitions/entity.ChannelType'
      channel_url:
        type: string
      video_end_date:
        type: string
      video_id:
        type: string
      video_image:
        type: string
      video_start_date:
        type: string
      video_title:
        type: string
      video_url:
        type: string
      vtuber_id:
        type: integer
      vtuber_image:
        type: string
      vtuber_name:
        type: string
    type: object
  service.vtuber:
    properties:
      affiliations:
        items:
          type: string
        type: array
      age:
        type: number
      agencies:
        items:
          $ref: '#/definitions/service.vtuberAgency'
        type: array
      birthday:
        type: string
      blood_type:
        type: string
      caption:
        type: string
      channels:
        items:
          $ref: '#/definitions/service.vtuberChannel'
        type: array
      character_2d_modelers:
        items:
          type: string
        type: array
      character_3d_modelers:
        items:
          type: string
        type: array
      character_designers:
        items:
          type: string
        type: array
      debut_date:
        type: string
      emoji:
        type: string
      gender:
        type: string
      has_2d:
        type: boolean
      has_3d:
        type: boolean
      height:
        type: number
      id:
        type: integer
      image:
        type: string
      languages:
        items:
          $ref: '#/definitions/service.vtuberLanguage'
        type: array
      monthly_subscriber:
        type: integer
      name:
        type: string
      nicknames:
        items:
          type: string
        type: array
      official_websites:
        items:
          type: string
        type: array
      original_names:
        items:
          type: string
        type: array
      retirement_date:
        type: string
      social_medias:
        items:
          type: string
        type: array
      subscriber:
        type: integer
      updated_at:
        type: string
      video_count:
        type: integer
      weight:
        type: number
      zodiac_sign:
        type: string
    type: object
  service.vtuberAgency:
    properties:
      id:
        minimum: 1
        type: integer
      image:
        type: string
      name:
        type: string
    required:
    - id
    - name
    type: object
  service.vtuberAgencyTree:
    properties:
      links:
        items:
          $ref: '#/definitions/service.vtuberAgencyTreeLink'
        type: array
      nodes:
        items:
          $ref: '#/definitions/service.vtuberAgencyTreeNode'
        type: array
    type: object
  service.vtuberAgencyTreeLink:
    properties:
      id1:
        type: integer
      id2:
        type: integer
    type: object
  service.vtuberAgencyTreeNode:
    properties:
      agencies:
        items:
          type: string
        type: array
      has_retired:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
    type: object
  service.vtuberBirthdayCount:
    properties:
      count:
        type: integer
      day:
        type: integer
      month:
        type: integer
    type: object
  service.vtuberBloodTypeCount:
    properties:
      blood_type:
        type: string
      count:
        type: integer
    type: object
  service.vtuberChannel:
    properties:
      id:
        type: string
      image:
        type: string
      name:
        type: string
      subscriber:
        type: integer
      type:
        $ref: '#/definitions/entity.ChannelType'
      url:
        type: string
      videos:
        items:
          $ref: '#/definitions/service.vtuberVideo'
        type: array
    required:
    - url
    type: object
  service.vtuberChannelTypeCount:
    properties:
      channel_type:
        $ref: '#/definitions/entity.ChannelType'
      count:
        type: integer
    type: object
  service.vtuberDebutRetireCount:
    properties:
      debut:
        type: integer
      month:
        type: integer
      retire:
        type: integer
      year:
        type: integer
    type: object
  service.vtuberDesignerCount:
    properties:
      count:
        type: integer
      name:
        type: string
    type: object
  service.vtuberFamilyTree:
    properties:
      links:
        items:
          $ref: '#/definitions/service.vtuberFamilyTreeLink'
        type: array
      nodes:
        items:
          $ref: '#/definitions/service.vtuberFamilyTreeNode'
        type: array
    type: object
  service.vtuberFamilyTreeLink:
    properties:
      id1:
        type: integer
      id2:
        type: integer
      role:
        $ref: '#/definitions/service.familyTreeRole'
    type: object
  service.vtuberFamilyTreeNode:
    properties:
      has_retired:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
    type: object
  service.vtuberGenderCount:
    properties:
      count:
        type: integer
      gender:
        type: string
    type: object
  service.vtuberImage:
    properties:
      id:
        type: integer
      image:
        type: string
      name:
        type: string
    type: object
  service.vtuberInAgencyCount:
    properties:
      in_agency:
        type: integer
      not_in_agency:
        type: integer
    type: object
  service.vtuberLanguage:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  service.vtuberLanguageCount:
    properties:
      count:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  service.vtuberModelCount:
    properties:
      both:
        type: integer
      has_2d_only:
        type: integer
      has_3d_only:
        type: integer
      none:
        type: integer
    type: object
  service.vtuberStatusCount:
    properties:
      active:
        type: integer
      retired:
        type: integer
    type: object
  service.vtuberSubscriberCount:
    properties:
      count:
        type: integer
      max:
        type: integer
      min:
        type: integer
    type: object
  service.vtuberVideo:
    properties:
      end_date:
        type: string
      id:
        type: string
      image:
        type: string
      start_date:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  service.vtuberVideoCount:
    properties:
      count:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  service.vtuberVideoCountByDate:
    properties:
      count:
        type: integer
      day:
        description: 1=sunday 2=monday
        type: integer
      hour:
        type: integer
    type: object
  service.vtuberVideoDuration:
    properties:
      duration:
        description: second
        type: number
      id:
        type: integer
      name:
        type: string
    type: object
  service.vtuberZodiacCount:
    properties:
      count:
        type: integer
      zodiac:
        type: string
    type: object
  utils.Response:
    properties:
      data:
        type: object
      message:
        type: string
      meta:
        type: object
      status:
        type: integer
    type: object
info:
  contact: {}
  description: Shimakaze API.
  title: Shimakaze API
paths:
  /admin/vtubers/{id}:
    delete:
      parameters:
      - description: Bearer jwt.admin_access.token
        in: header
        name: Authorization
        required: true
        type: string
      - description: vtuber id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Delete vtuber data.
      tags:
      - Admin
  /admin/vtubers/{id}/override:
    get:
      parameters:
      - description: Bearer jwt.admin_access.token
        in: header
        name: Authorization
        required: true
        type: string
      - description: vtuber id
        in: path
        name: id
        required: true
        type: integer
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.VtuberOverriddenField'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.VtuberOverriddenField'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber overridden field data.
      tags:
      - Admin
    put:
      parameters:
      - description: Bearer jwt.admin_access.token
        in: header
        name: Authorization
        required: true
        type: string
      - description: vtuber id
        in: path
        name: id
        required: true
        type: integer
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.VtuberOverriddenField'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Update vtuber overridden field data.
      tags:
      - Admin
  /admin/vtubers/{id}/parse:
    post:
      parameters:
      - description: Bearer jwt.admin_access.token
        in: header
        name: Authorization
        required: true
        type: string
      - description: vtuber id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Parse vtuber data.
      tags:
      - Admin
  /agencies:
    get:
      parameters:
      - default: name
        description: sort
        enum:
        - name
        - -name
        - member
        - -member
        - subscriber
        - -subscriber
        in: query
        name: sort
        type: string
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 20
        description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.agency'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get agency data.
      tags:
      - Agency
  /agencies/{id}:
    get:
      parameters:
      - description: wikia id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.agency'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get agency data.
      tags:
      - Agency
  /auth/callback:
    post:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.AuthCallback'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.Token'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Handle OAuth2 callback.
      tags:
      - Auth
  /auth/logout:
    post:
      parameters:
      - description: Bearer jwt.access.token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Logout.
      tags:
      - Auth
  /auth/token/refresh:
    post:
      parameters:
      - description: Bearer jwt.refresh.token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.Token'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Refresh Token.
      tags:
      - Auth
  /languages:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.language'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get language data.
      tags:
      - Language
  /profile:
    get:
      parameters:
      - description: Bearer jwt.access.token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get user profile.
      tags:
      - User
  /statistics/agencies/count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: integer
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get agency count.
      tags:
      - Statistic
  /statistics/vtubers/2d-modeler-count:
    get:
      parameters:
      - default: 10
        description: top count
        in: query
        name: top
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberDesignerCount'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber character 2d modeler count.
      tags:
      - Statistic
  /statistics/vtubers/3d-modeler-count:
    get:
      parameters:
      - default: 10
        description: top count
        in: query
        name: top
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberDesignerCount'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber character 3d modeler count.
      tags:
      - Statistic
  /statistics/vtubers/average-active-time:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: number
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber average active time.
      tags:
      - Statistic
  /statistics/vtubers/average-height:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: number
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber average height.
      tags:
      - Statistic
  /statistics/vtubers/average-video-count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: number
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber average video count.
      tags:
      - Statistic
  /statistics/vtubers/average-video-duration:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: number
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber average video duration.
      tags:
      - Statistic
  /statistics/vtubers/average-weight:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: number
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber average weight.
      tags:
      - Statistic
  /statistics/vtubers/birthday-count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberBirthdayCount'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber birthday count.
      tags:
      - Statistic
  /statistics/vtubers/blood-type-count:
    get:
      parameters:
      - default: 5
        description: top count
        in: query
        name: top
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberBloodTypeCount'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber blood type count.
      tags:
      - Statistic
  /statistics/vtubers/channel-type-count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberChannelTypeCount'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber channel type count.
      tags:
      - Statistic
  /statistics/vtubers/count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: integer
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber count.
      tags:
      - Statistic
  /statistics/vtubers/count-by-status:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.vtuberStatusCount'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber status count.
      tags:
      - Statistic
  /statistics/vtubers/debut-retire-count-monthly:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberDebutRetireCount'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber debut & retire count monthly.
      tags:
      - Statistic
  /statistics/vtubers/debut-retire-count-yearly:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberDebutRetireCount'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber debut & retire count yearly.
      tags:
      - Statistic
  /statistics/vtubers/designer-count:
    get:
      parameters:
      - default: 10
        description: top count
        in: query
        name: top
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberDesignerCount'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber character designer count.
      tags:
      - Statistic
  /statistics/vtubers/gender-count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberGenderCount'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber gender count.
      tags:
      - Statistic
  /statistics/vtubers/in-agency-count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.vtuberInAgencyCount'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber in agency count.
      tags:
      - Statistic
  /statistics/vtubers/language-count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberLanguageCount'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber language count.
      tags:
      - Statistic
  /statistics/vtubers/model-count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberModelCount'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber 2d & 3d model count.
      tags:
      - Statistic
  /statistics/vtubers/subscriber-count:
    get:
      parameters:
      - default: 100000
        description: interval
        in: query
        name: interval
        type: integer
      - default: 5000000
        description: max
        in: query
        name: max
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberSubscriberCount'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber subscriber count.
      tags:
      - Statistic
  /statistics/vtubers/video-count:
    get:
      parameters:
      - default: 10
        description: top count
        in: query
        name: top
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberVideoCount'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber video count.
      tags:
      - Statistic
  /statistics/vtubers/video-count-by-date:
    get:
      parameters:
      - description: hourly
        in: query
        name: hourly
        type: boolean
      - description: daily
        in: query
        name: daily
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberVideoCountByDate'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber video count by date.
      tags:
      - Statistic
  /statistics/vtubers/video-duration:
    get:
      parameters:
      - default: 10
        description: top count
        in: query
        name: top
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberVideoDuration'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber video duration.
      tags:
      - Statistic
  /statistics/vtubers/zodiac-count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberZodiacCount'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber zodiac count.
      tags:
      - Statistic
  /videos:
    get:
      parameters:
      - description: start date
        in: query
        name: start_date
        type: string
      - description: end date
        in: query
        name: end_date
        type: string
      - description: is finished
        in: query
        name: is_finished
        type: boolean
      - default: -video_start_date
        description: sort
        enum:
        - video_start_date
        - -video_start_date
        in: query
        name: sort
        type: string
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 20
        description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.video'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get videos.
      tags:
      - Video
  /vtubers:
    get:
      parameters:
      - default: all
        description: mode
        enum:
        - all
        - simple
        in: query
        name: mode
        type: string
      - description: names
        in: query
        name: names
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: original name
        in: query
        name: original_name
        type: string
      - description: nickname
        in: query
        name: nickname
        type: string
      - description: exclude active
        in: query
        name: exclude_active
        type: boolean
      - description: exclude retired
        in: query
        name: exclude_retired
        type: boolean
      - description: start debut day
        in: query
        name: debut_day
        type: integer
      - description: start debut month
        in: query
        name: start_debut_month
        type: integer
      - description: end debut month
        in: query
        name: end_debut_month
        type: integer
      - description: start debut year
        in: query
        name: start_debut_year
        type: integer
      - description: end debut year
        in: query
        name: end_debut_year
        type: integer
      - description: start retired month
        in: query
        name: start_retired_month
        type: integer
      - description: end retired month
        in: query
        name: end_retired_month
        type: integer
      - description: start retired year
        in: query
        name: start_retired_year
        type: integer
      - description: end retired year
        in: query
        name: end_retired_year
        type: integer
      - description: has 2d model
        in: query
        name: has_2d
        type: boolean
      - description: has 3d model
        in: query
        name: has_3d
        type: boolean
      - description: character designer
        in: query
        name: character_designer
        type: string
      - description: character 2d modeler
        in: query
        name: character_2d_modeler
        type: string
      - description: character 3d modeler
        in: query
        name: character_3d_modeler
        type: string
      - description: in agency
        in: query
        name: in_agency
        type: boolean
      - description: agency
        in: query
        name: agency
        type: string
      - description: agency id
        in: query
        name: agency_id
        type: integer
      - description: language id
        in: query
        name: language_id
        type: integer
      - description: channel types
        in: query
        name: channel_types
        type: string
      - description: birthday day
        in: query
        name: birthday_day
        type: integer
      - description: start birthday month
        in: query
        name: start_birthday_month
        type: integer
      - description: end birthday month
        in: query
        name: end_birthday_month
        type: integer
      - description: blood types
        in: query
        name: blood_types
        type: string
      - description: gender types
        in: query
        name: genders
        type: string
      - description: zodiac types
        in: query
        name: zodiacs
        type: string
      - description: start subscriber
        in: query
        name: start_subscriber
        type: integer
      - description: end subscriber
        in: query
        name: end_subscriber
        type: integer
      - description: start video count
        in: query
        name: start_video_count
        type: integer
      - description: end video count
        in: query
        name: end_video_count
        type: integer
      - default: name
        description: sort
        enum:
        - name
        - -name
        - debut_date
        - -debut_date
        - retirement_date
        - -retirement_date
        - subscriber
        - -subscriber
        - monthly_subscriber
        - -monthly_subscriber
        - video_count
        - -video_count
        in: query
        name: sort
        type: string
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 20
        description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuber'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber data.
      tags:
      - Vtuber
  /vtubers/{id}:
    get:
      parameters:
      - description: wikia id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.vtuber'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber data.
      tags:
      - Vtuber
  /vtubers/2d-modelers:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber character 2D modelers.
      tags:
      - Vtuber
  /vtubers/3d-modelers:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber character 3D modelers.
      tags:
      - Vtuber
  /vtubers/agency-trees:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.vtuberAgencyTree'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber agency trees.
      tags:
      - Vtuber
  /vtubers/character-designers:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber character designers.
      tags:
      - Vtuber
  /vtubers/family-trees:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.vtuberFamilyTree'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber family trees.
      tags:
      - Vtuber
  /vtubers/images:
    get:
      parameters:
      - description: shuffle
        in: query
        name: shuffle
        type: boolean
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberImage'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get all vtuber images.
      tags:
      - Vtuber
  /wikia/image/{path}:
    get:
      parameters:
      - description: wikia image url
        in: path
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PNG image
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get wikia image.
      tags:
      - Wikia
schemes:
- http
- https
swagger: "2.0"
