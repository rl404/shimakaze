basePath: /
definitions:
  service.agency:
    properties:
      id:
        type: integer
      image:
        type: string
      member:
        type: integer
      name:
        type: string
      subscriber:
        type: integer
      updated_at:
        type: string
    type: object
  service.vtuber:
    properties:
      affiliations:
        items:
          type: string
        type: array
      age:
        type: number
      agencies:
        items:
          $ref: '#/definitions/service.vtuberAgency'
        type: array
      birthday:
        type: string
      blood_type:
        type: string
      caption:
        type: string
      channels:
        items:
          $ref: '#/definitions/service.vtuberChannel'
        type: array
      character_2d_modelers:
        items:
          type: string
        type: array
      character_3d_modelers:
        items:
          type: string
        type: array
      character_designers:
        items:
          type: string
        type: array
      debut_date:
        type: string
      emoji:
        type: string
      gender:
        type: string
      has_2d:
        type: boolean
      has_3d:
        type: boolean
      height:
        type: number
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      nicknames:
        items:
          type: string
        type: array
      official_websites:
        items:
          type: string
        type: array
      original_names:
        items:
          type: string
        type: array
      retirement_date:
        type: string
      social_medias:
        items:
          type: string
        type: array
      updated_at:
        type: string
      weight:
        type: number
      zodiac_sign:
        type: string
    type: object
  service.vtuberAgency:
    properties:
      id:
        type: integer
      image:
        type: string
      name:
        type: string
    type: object
  service.vtuberAgencyTree:
    properties:
      links:
        items:
          $ref: '#/definitions/service.vtuberAgencyTreeLink'
        type: array
      nodes:
        items:
          $ref: '#/definitions/service.vtuberAgencyTreeNode'
        type: array
    type: object
  service.vtuberAgencyTreeLink:
    properties:
      id1:
        type: integer
      id2:
        type: integer
    type: object
  service.vtuberAgencyTreeNode:
    properties:
      agencies:
        items:
          type: string
        type: array
      has_retired:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
    type: object
  service.vtuberChannel:
    properties:
      id:
        type: string
      image:
        type: string
      name:
        type: string
      subscriber:
        type: integer
      type:
        type: string
      url:
        type: string
      videos:
        items:
          $ref: '#/definitions/service.vtuberVideo'
        type: array
    type: object
  service.vtuberFamilyTree:
    properties:
      links:
        items:
          $ref: '#/definitions/service.vtuberFamilyTreeLink'
        type: array
      nodes:
        items:
          $ref: '#/definitions/service.vtuberFamilyTreeNode'
        type: array
    type: object
  service.vtuberFamilyTreeLink:
    properties:
      id1:
        type: integer
      id2:
        type: integer
      role:
        type: string
    type: object
  service.vtuberFamilyTreeNode:
    properties:
      has_retired:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
    type: object
  service.vtuberImage:
    properties:
      id:
        type: integer
      image:
        type: string
      name:
        type: string
    type: object
  service.vtuberVideo:
    properties:
      end_date:
        type: string
      id:
        type: string
      image:
        type: string
      start_date:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  utils.Response:
    properties:
      data:
        type: object
      message:
        type: string
      meta:
        type: object
      status:
        type: integer
    type: object
info:
  contact: {}
  description: Shimakaze API.
  title: Shimakaze API
paths:
  /agencies:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.agency'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get agency data.
      tags:
      - Agency
  /agencies/{id}:
    get:
      parameters:
      - description: wikia id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.agency'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get agency data.
      tags:
      - Agency
  /vtubers:
    get:
      parameters:
      - default: all
        description: mode
        enum:
        - all
        - stats
        in: query
        name: mode
        type: string
      - description: names
        in: query
        name: names
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: original name
        in: query
        name: original_name
        type: string
      - description: nickname
        in: query
        name: nickname
        type: string
      - description: exclude active
        in: query
        name: exclude_active
        type: boolean
      - description: exclude retired
        in: query
        name: exclude_retired
        type: boolean
      - description: start debut month
        in: query
        name: start_debut_month
        type: integer
      - description: end debut month
        in: query
        name: end_debut_month
        type: integer
      - description: start debut year
        in: query
        name: start_debut_year
        type: integer
      - description: end debut year
        in: query
        name: end_debut_year
        type: integer
      - description: start retired month
        in: query
        name: start_retired_month
        type: integer
      - description: end retired month
        in: query
        name: end_retired_month
        type: integer
      - description: start retired year
        in: query
        name: start_retired_year
        type: integer
      - description: end retired year
        in: query
        name: end_retired_year
        type: integer
      - description: has 2d model
        in: query
        name: has_2d
        type: boolean
      - description: has 3d model
        in: query
        name: has_3d
        type: boolean
      - description: character designer
        in: query
        name: character_designer
        type: string
      - description: character 2d modeler
        in: query
        name: character_2d_modeler
        type: string
      - description: character 3d modeler
        in: query
        name: character_3d_modeler
        type: string
      - description: in agency
        in: query
        name: in_agency
        type: boolean
      - description: agency
        in: query
        name: agency
        type: string
      - description: agency id
        in: query
        name: agency_id
        type: integer
      - description: channel types
        in: query
        name: channel_types
        type: string
      - description: birthday day
        in: query
        name: birthday_day
        type: integer
      - description: start birthday month
        in: query
        name: start_birthday_month
        type: integer
      - description: end birthday month
        in: query
        name: end_birthday_month
        type: integer
      - description: blood types
        in: query
        name: blood_types
        type: string
      - description: gender types
        in: query
        name: genders
        type: string
      - description: zodiac types
        in: query
        name: zodiacs
        type: string
      - description: start subscriber
        in: query
        name: start_subscriber
        type: integer
      - description: end subscriber
        in: query
        name: end_subscriber
        type: integer
      - default: name
        description: sort
        enum:
        - name
        - -name
        - debut_date
        - -debut_date
        - retirement_date
        - -retirement_date
        - subscriber
        - -subscriber
        in: query
        name: sort
        type: string
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 20
        description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuber'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber data.
      tags:
      - Vtuber
  /vtubers/{id}:
    get:
      parameters:
      - description: wikia id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.vtuber'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber data.
      tags:
      - Vtuber
  /vtubers/2d-modelers:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber character 2D modelers.
      tags:
      - Vtuber
  /vtubers/3d-modelers:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber character 3D modelers.
      tags:
      - Vtuber
  /vtubers/agency-trees:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.vtuberAgencyTree'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber agency trees.
      tags:
      - Vtuber
  /vtubers/character-designers:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber character designers.
      tags:
      - Vtuber
  /vtubers/family-trees:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.vtuberFamilyTree'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get vtuber family trees.
      tags:
      - Vtuber
  /vtubers/images:
    get:
      parameters:
      - description: shuffle
        in: query
        name: shuffle
        type: boolean
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.vtuberImage'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get all vtuber images.
      tags:
      - Vtuber
  /wikia/image/{path}:
    get:
      parameters:
      - description: wikia image url
        in: path
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PNG image
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get wikia image.
      tags:
      - Wikia
schemes:
- http
- https
swagger: "2.0"
